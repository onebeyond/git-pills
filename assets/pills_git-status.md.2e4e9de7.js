import{o as s,c as n,a}from"./app.aea1c844.js";const e='{"title":"Git Status","description":"","frontmatter":{},"headers":[{"level":2,"title":"Introduction","slug":"introduction"},{"level":2,"title":"How to use it","slug":"how-to-use-it"},{"level":3,"title":"git status or git status --long","slug":"git-status-or-git-status-long"},{"level":3,"title":"git status -v | --verbose","slug":"git-status-v-verbose"},{"level":3,"title":"git status -s | --short","slug":"git-status-s-short"},{"level":3,"title":"git status -u[mode] | --untracked-files[mode]","slug":"git-status-u-mode-untracked-files-mode"}],"relativePath":"pills/git-status.md","lastUpdated":1674818568965}',t={},i=a('<h1 id="git-status"><a class="header-anchor" href="#git-status" aria-hidden="true">#</a> Git Status</h1><h2 id="introduction"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><p><code>git status</code> is a command that show us how is it going on the working tree.</p><h2 id="how-to-use-it"><a class="header-anchor" href="#how-to-use-it" aria-hidden="true">#</a> How to use it</h2><h3 id="git-status-or-git-status-long"><a class="header-anchor" href="#git-status-or-git-status-long" aria-hidden="true">#</a> <code>git status</code> or <code>git status --long</code></h3><p>Shows the status with a long format</p><div class="language-bash line-numbers-mode"><pre><code>Changes not staged <span class="token keyword">for</span> commit:\n<span class="token punctuation">(</span>use <span class="token string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed<span class="token punctuation">)</span>\n<span class="token punctuation">(</span>use <span class="token string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="token keyword">in</span> working directory<span class="token punctuation">)</span>\n      modified:   docs/pills/index.md\n\nUntracked files:\n<span class="token punctuation">(</span>use <span class="token string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="token keyword">in</span> what will be committed<span class="token punctuation">)</span>\n      docs/pills/git-status.md\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h3 id="git-status-v-verbose"><a class="header-anchor" href="#git-status-v-verbose" aria-hidden="true">#</a> <code>git status -v | --verbose</code></h3><p>Shows the textual changes that are staged and will be commited</p><h3 id="git-status-s-short"><a class="header-anchor" href="#git-status-s-short" aria-hidden="true">#</a> <code>git status -s | --short</code></h3><p>Shows the info with a short format</p><div class="language-bash line-numbers-mode"><pre><code>D  docs/pills/index.md\n?? docs/pills/git-status.md\nA  docs/pills/git-rebase.md\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>The <code>-s</code> modificator allows us to see the info with an special format <code>XY PATH</code> where the <em>x</em> (staging area) and <em>y</em> (local changes) could be:</p><ul><li><code>&#39;&#39;</code>: unmodified</li><li><code>?</code>: untracked</li><li><code>M</code>: modified</li><li><code>A</code>: added</li><li><code>D</code>: deleted</li><li><code>R</code>: renamed</li><li><code>C</code>: copied</li></ul><p>So if we want to see our actual branch and our current changes in a short way, we only have to write on the terminal <code>git status -b -s</code> And we could get something like</p><div class="language-bash line-numbers-mode"><pre><code><span class="token comment">## git-status</span>\n M docs/pills/git-rebase.md\nAM docs/pills/git-status.md\n D docs/pills/index.md\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>Here we can see:</p><ul><li>the current branch <em>git-status</em></li><li>the file <code>git-rebase.md</code> has been modified</li><li>the file <code>index.md</code> has been deleted</li><li>the file <code>git-status.md</code> that has been added to the staging area and modified later.</li></ul><h3 id="git-status-u-mode-untracked-files-mode"><a class="header-anchor" href="#git-status-u-mode-untracked-files-mode" aria-hidden="true">#</a> <code>git status -u[mode] | --untracked-files[mode]</code></h3><p>Allow us to select if we want to show untracked files, the <code>mode</code> options are:</p><ul><li><code>no</code>: only shows tracked files</li><li><code>normal</code>: shows untacked files and directories</li><li><code>all</code>: shows individual files in untracked directories</li></ul><div class="language-bash line-numbers-mode"><pre><code><span class="token operator">&gt;</span> <span class="token function">git</span> status -uall\n\nOn branch git-status\nYour branch is up to <span class="token function">date</span> with <span class="token string">&#39;origin/git-status&#39;</span><span class="token builtin class-name">.</span>\n\nChanges not staged <span class="token keyword">for</span> commit:\n  <span class="token punctuation">(</span>use <span class="token string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed<span class="token punctuation">)</span>\n  <span class="token punctuation">(</span>use <span class="token string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="token keyword">in</span> working directory<span class="token punctuation">)</span>\n        modified:   docs/pills/git-status.md\n\nUntracked files:\n  <span class="token punctuation">(</span>use <span class="token string">&quot;git add &lt;file&gt;...&quot;</span> to include <span class="token keyword">in</span> what will be committed<span class="token punctuation">)</span>\n        docs/pills/newFileUntracked\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><div class="language-bash line-numbers-mode"><pre><code><span class="token operator">&gt;</span> <span class="token function">git</span> status -uno\n\nOn branch git-status\nYour branch is up to <span class="token function">date</span> with <span class="token string">&#39;origin/git-status&#39;</span><span class="token builtin class-name">.</span>\n\nChanges not staged <span class="token keyword">for</span> commit:\n  <span class="token punctuation">(</span>use <span class="token string">&quot;git add &lt;file&gt;...&quot;</span> to update what will be committed<span class="token punctuation">)</span>\n  <span class="token punctuation">(</span>use <span class="token string">&quot;git restore &lt;file&gt;...&quot;</span> to discard changes <span class="token keyword">in</span> working directory<span class="token punctuation">)</span>\n        modified:   docs/pills/git-status.md\n\nno changes added to commit <span class="token punctuation">(</span>use <span class="token string">&quot;git add&quot;</span> and/or <span class="token string">&quot;git commit -a&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div>',23);t.render=function(a,e,t,o,l,r){return s(),n("div",null,[i])};export default t;export{e as __pageData};
